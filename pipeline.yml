AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation Template to create 
  a CICD pipeline on AWS using AWS Dev Tools
  #Parameters:
Resources:
  # Service Roles & Rules
  MyCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
      Policies:
      - PolicyName: WebAppCodePipelineAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              Resource: "*"
              Effect: Allow
            - Action:
              - s3:PutObject
              Resource:
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
              Effect: Allow
            - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
              Resource: "*"
              Effect: Allow
            - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
              Resource: "*"
              Effect: Allow
            - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
              Resource: "*"
              Effect: Allow
            - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
              - iam:PassRole
              Resource: "*"
              Effect: Allow
            - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              Resource: "*"
              Effect: Allow
            - Effect: Allow
              Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
              Resource: "*"
  
  MyCodeDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: MyCodeDeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - autoscaling:*
                  - codedeploy:*
                  - ec2:*
                Resource: "*"
  
  EventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: eb-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref AppPipeline ] ]
  
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !GetAtt MyCodeCommitRepo.Name ] ]
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        -
          Arn: 
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref AppPipeline ] ]
          RoleArn: !GetAtt EventRole.Arn
          Id: codepipeline-AppPipeline

  # Artifact Bucket
  ArtifactS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ha-webapp-artifactbucket

  # CodeCommit
  MyCodeCommitRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: ha-webapp-repo
      RepositoryDescription: This repo was created for HA webapp

  # CodeDeploy
  MyCodeDeployApplication:
    Type: "AWS::CodeDeploy::Application"
    Properties:
      ApplicationName: ha-webapp-code-deploy-application

  MyDeploymentGroup:
    Type: "AWS::CodeDeploy::DeploymentGroup"
    Properties:
      ApplicationName: !Ref MyCodeDeployApplication
      DeploymentGroupName: ha-webapp-code-deployment-group
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      ServiceRoleArn: !GetAtt MyCodeDeployRole.Arn
      AutoScalingGroups:
        - !ImportValue WebAppAutoScalingGroup

  # CodePipeline
  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      RoleArn: !GetAtt MyCodePipelineRole.Arn
      Stages: 
        - Name: Source 
          Actions: 
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: '1'
                Provider: CodeCommit 
              OutputArtifacts: 
                - Name: SourceOutput 
              Configuration: 
                RepositoryName: !GetAtt MyCodeCommitRepo.Name
                BranchName: main
                PollForSourceChanges: 'false'
              RunOrder: 1 
        - Name: Approval
          Actions:
            - Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              # Configuration:
              #   NotificationArn: arn:aws:sns:us-east-1:123456789012:MyApprovalSnsTopic
              # InputArtifacts:
              #   - Name: SourceOutput
              RunOrder: 2
        - Name: Deploy 
          Actions: 
            - Name: Deploy
              InputArtifacts: 
                - Name: SourceOutput 
              ActionTypeId: 
                Category: Deploy 
                Owner: AWS 
                Version: '1'
                Provider: CodeDeploy
              Configuration: 
                ApplicationName: !Ref MyCodeDeployApplication
                DeploymentGroupName: !Ref MyDeploymentGroup
              RunOrder: 3
      ArtifactStore: 
        Type: S3 
        Location:
          Ref: ArtifactS3Bucket
  